cmake_minimum_required(VERSION 3.5)

project("ComponentsLib")

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
# set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-Wall -Wextra -Wpedantic -Werror")
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets LinguistTools REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets LinguistTools REQUIRED)
find_package(Qt6Widgets) 
include_directories(${Qt6Widgets_INCLUDE_DIRS})
find_package(Qt6 REQUIRED COMPONENTS Network)

set(TS_FILES PartyTime_ru_RU.ts)
set(COMPONENTS)

file(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/**/*.cpp)
file(GLOB_RECURSE HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/**/*.hpp ${CMAKE_CURRENT_SOURCE_DIR}/**/*.h)

set(COMPONENTSLIB_NAME components)
set(COMPONENTS_LIB_DEP ${CMAKE_CURRENT_SOURCE_DIR}/EventFilter ${CMAKE_CURRENT_SOURCE_DIR}/EventForm
${CMAKE_CURRENT_SOURCE_DIR}/EventItem ${CMAKE_CURRENT_SOURCE_DIR}/EventList)

include_directories(Qt${QT_VERSION_MAJOR}::Widgets)
add_subdirectory(UI)
add_library(${COMPONENTSLIB_NAME} ${SOURCES} ${HEADERS})
target_include_directories(${COMPONENTSLIB_NAME} PUBLIC ${COMPONENTS_LIB_DEP})
target_link_libraries(${COMPONENTSLIB_NAME} PRIVATE ${UI_LIB})
target_include_directories(${COMPONENTSLIB_NAME} PUBLIC ${UI_INCLUDE_DIRS})

set(COMPONENTS_LIB ${COMPONENTSLIB_NAME})
set(COMPONENTS_LIB ${COMPONENTS_LIB} PARENT_SCOPE)
set(COMPONENTS_INCLUDE_DIRS ${COMPONENTSLIB_NAME} ${COMPONENTS_LIB_DEP})
set(COMPONENTS_INCLUDE_DIRS ${COMPONENTS_INCLUDE_DIRS} PARENT_SCOPE)

message("COMPONENTS_LIB = ${COMPONENTS_LIB}")
message("COMPONENTS_LIB_INCLUDE_DIRS = ${COMPONENTS_INCLUDE_DIRS}")

# enable_testing()
# add_subdirectory(tests)
